refs:
  install_hasura_cli: &install_hasura_cli
    run:
      name: Install Hasura CLI
      command: |
        curl -L https://github.com/hasura/graphql-engine/raw/master/cli/get.sh | bash

deploy_environment: &deploy_environment
  docker:
    - image: circleci/node:10-browsers

version: 2
jobs:
  build:
    <<: *deploy_environment
    steps:
      - checkout
      - run:
          name: Install npm deps
          command: npm install --no-save
      - run:
          name: Lint code
          command: npm run lint
      - run:
          name: Build bundles
          command: |
            set -e
            npm run build
      - run:
          name: Build storybook bundle
          command: |
            set -e
            cd packages/components
            npm run build-storybook -- --quiet
      - persist_to_workspace:
          root: .
          paths:
            - .
  test:
    <<: *deploy_environment
    steps:
      - attach_workspace:
          at: .
      - *install_hasura_cli
      - run:
          name: Test
          command: |
            set -e
            npm test
  e2e:
    <<: *deploy_environment
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test e2e
          command: |
            set -e
            npm run 'ci:e2e-test'
  deploy:
    <<: *deploy_environment
    environment:
      AWS_DEFAULT_REGION: 'eu-west-1'
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install awscli
          command: |
            sudo apt-get install python-pip python
            sudo pip install awscli
      - run:
          name: Deploy app bundle to S3
          command: aws s3 sync packages/app/public ${APP_S3_BUCKET_PATH} --delete --cache-control max-age=0,no-cache,no-store,must-revalidate
      - run:
          name: Deploy storybook bundle to S3
          command: aws s3 sync packages/components/storybook-static ${STORYBOOK_S3_BUCKET_PATH} --delete --cache-control max-age=0,no-cache,no-store,must-revalidate
      - run:
          name: Deploy jwt-enrichment-hook Lambda function
          command: |
            zip jwt-enrichment-hook.zip -FSj packages/functions/build/jwt-enrichment-hook.js
            aws lambda update-function-code --function-name rawsalmon_jwt_enrichment_hook --zip-file fileb://jwt-enrichment-hook.zip
      - run:
          name: Deploy signup-hook Lambda function
          command: |
            zip signup-hook.zip -FSj packages/functions/build/signup-hook.js
            aws lambda update-function-code --function-name rawsalmon_signup_hook --zip-file fileb://signup-hook.zip
  apply-hasura-migrations:
    <<: *deploy_environment
    steps:
      - attach_workspace:
          at: .
      - *install_hasura_cli
      - run:
          name: Apply Hasura migrations
          command: |
            hasura migrate apply --project packages/hasura
      - run:
          name: Apply Assess-base Hasura migrations
          command: |
            hasura migrate apply --project packages/assess-base-hasura
      - run:
          name: Seed DB with data
          command: |
            export HASURA_GRAPHQL_API=${GATSBY_GRAPHQL_API}
            cd packages/hasura
            npm run seed
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - apply-hasura-migrations:
          filters:
            branches:
              only:
                - master
          requires:
            - build
      - e2e:
          requires:
            - build
