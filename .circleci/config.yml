deploy_environment: &deploy_environment
  docker:
    - image: circleci/node:10

version: 2
jobs:
  build:
    <<: *deploy_environment
    steps:
      - checkout
      - run: 
          name: Install npm deps
          command: npm install
      # npm build runs lerna run build. lerna will potentially build unneeded assets.
      # if build gets slow in future we should investigate removing unneeded asset builds from lerna
      - run:
          name: Build bundle
          command: |
            set -e
            npm run build
      - run:
          name: Build Lambda functions
          command: |
            set -e
            cd packages/functions
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - .
  test:
    <<: *deploy_environment
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test
          command: |
            set -e
            npm test
  deploy:
    <<: *deploy_environment
    environment:
      S3_BUCKET_PATH: "s3://knowledgebase.nearform.com"
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install awscli
          command: |
            sudo apt-get install python-pip python
            sudo pip install awscli
      - run:
          name: Deploy bundle to S3
          command: aws s3 sync packages/app/public ${S3_BUCKET_PATH} --delete --cache-control max-age=0,no-cache,no-store,must-revalidate
  test-lambdas:
    <<: *deploy_environment
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test lambdas
          command: |
            set -e
            cd packages/functions
            npm test
  deploy-lambdas:
    <<: *deploy_environment
    environment:
      AWS_DEFAULT_REGION: "eu-west-1"
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install awscli
          command: |
            sudo apt-get install python-pip python
            sudo pip install awscli
      - run:
          name: Deploy jwt-enrichment-hook Lambda
          command: |
            zip jwt-enrichment-hook.zip -FSj packages/functions/build/jwt-enrichment-hook.js
            aws lambda update-function-code --function-name knowledgebase_jwt_enrichment_hook --zip-file fileb://jwt-enrichment-hook.zip
      - run:
          name: Deploy signup-hook Lambda
          command: |
            zip signup-hook.zip -FSj packages/functions/build/signup-hook.js
            aws lambda update-function-code --function-name knowledgebase_signup_hook --zip-file fileb://signup-hook.zip
  apply-hasura-migrations:
    <<: *deploy_environment
    steps:
      - checkout
      - run:
          name: Install Hasura CLI
          command: |
            curl -L https://github.com/hasura/graphql-engine/raw/master/cli/get.sh | bash
      - run:
          name: Apply Hasura migrations
          command: |
            cd hasura
            hasura migrate apply
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - test-lambdas:
          requires:
            - build
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - apply-hasura-migrations:
          filters:
            branches:
              only:
                - master
      - deploy-lambdas:
          filters:
            branches:
              only:
                - master
          requires:
            - test-lambdas